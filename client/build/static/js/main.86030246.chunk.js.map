{"version":3,"sources":["spotify.js","styles/variables.js","styles/GlobalStyle.js","styles/StyledHeader.js","styles/StyledSection.js","styles/StyledGrid.js","styles/StyledTrackList.js","styles/StyledRangedButtons.js","styles/StyledDropdown.js","pages/Login.js","utils.js","components/ArtistsGrid.js","components/SectionWrapper.js","components/TrackList.js","components/PlaylistsGrid.js","components/TimeRangeButtons.js","components/Loader.js","pages/Profile.js","pages/TopArtists.js","pages/TopTracks.js","pages/Playlists.js","pages/Playlist.js","App.js","reportWebVitals.js","index.js"],"names":["LOCALSTORAGE_KEYS","accessToken","refreshToken","expireTime","timestamp","LOCALSTORAGE_VALUES","window","localStorage","getItem","logout","property","removeItem","location","origin","a","Date","now","Number","console","error","axios","get","data","setItem","access_token","reload","queryString","search","urlParams","URLSearchParams","queryParams","hasTokenExpired","getAccessToken","defaults","baseURL","headers","getCurrentUserPlaylists","limit","getTopArtists","time_range","getTopTracks","getAudioFeaturesForTracks","ids","variables","css","GlobalStyle","createGlobalStyle","fonts","StyledHeader","styled","header","props","type","StyledSection","section","StyledGrid","ul","StyledTrackList","StyledRangeButtons","StyledDropdown","div","active","StyledLoginContainer","main","StyledLoginButton","Login","href","catchErrors","fn","catch","err","formatDuration","ms","minutes","Math","floor","seconds","ArtistsGrid","artists","length","map","artist","i","className","images","src","url","alt","name","SectionWrapper","children","title","seeAllLink","breadcrumb","to","TrackList","tracks","track","album","duration_ms","PlaylistsGrid","playlists","playlist","id","TimeRangeButtons","activeRange","setActiveRange","onClick","dance","keyframes","StyledLoader","StyledBar","delay","Loader","Profile","useState","profile","setProfile","setPlaylists","topArtists","setTopArtists","topTracks","setTopTracks","useEffect","fetchData","userProfile","userPlaylists","userTopArtists","userTopTracks","log","display_name","total","followers","items","slice","TopArtists","TopTracks","Playlists","playlistsData","setPlaylistsData","fetchMoreData","next","Playlist","useParams","setPlaylist","tracksData","setTracksData","setTracks","audioFeatures","setAudioFeatures","sortValue","setSortValue","playlist_id","fetchAudioFeatures","join","tracksWithAudioFeatures","useMemo","trackToAdd","audio_features","audioFeaturesObj","find","item","sortedTracks","sort","b","aFeatures","bFeatures","htmlFor","onChange","e","target","value","option","charAt","toUpperCase","StyledLogoutButton","button","ScrollToTop","pathname","useLocation","scrollTo","App","token","setToken","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86030246.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst LOCALSTORAGE_KEYS = {\r\n    accessToken: 'spotify_access_token',\r\n    refreshToken: 'spotify_refresh_token',\r\n    expireTime: 'spotify_token_expire_time',\r\n    timestamp: 'spotify_token_timestamp'\r\n}\r\n\r\nconst LOCALSTORAGE_VALUES = {\r\n    accessToken: window.localStorage.getItem(LOCALSTORAGE_KEYS.accessToken),\r\n    refreshToken: window.localStorage.getItem(LOCALSTORAGE_KEYS.refreshToken),\r\n    expireTime: window.localStorage.getItem(LOCALSTORAGE_KEYS.expireTime),\r\n    timestamp: window.localStorage.getItem(LOCALSTORAGE_KEYS.timestamp)\r\n}\r\n\r\nexport const logout = () => {\r\n    //clear out storage\r\n    for(const property in LOCALSTORAGE_KEYS){\r\n        window.localStorage.removeItem(LOCALSTORAGE_KEYS[property]);\r\n    }\r\n\r\n    //navigate to homepage\r\n    window.location = window.location.origin;\r\n}\r\n\r\n\r\nconst hasTokenExpired = () => {\r\n    const {accessToken, timestamp, expireTime} = LOCALSTORAGE_VALUES;\r\n    if(!accessToken || !timestamp){\r\n        return false;\r\n    }\r\n    const millisecondsElapsed = Date.now() - Number(timestamp);\r\n    return (millisecondsElapsed/1000) > Number(expireTime);\r\n}\r\n\r\nconst refreshToken = async () => {\r\n    try{\r\n        if(!LOCALSTORAGE_VALUES.refreshToken || \r\n            LOCALSTORAGE_VALUES.refreshToken === 'undefined' || \r\n            (Date.now() - Number(LOCALSTORAGE_VALUES.timestamp) /\r\n            1000) < 1000){\r\n                console.error('No refresh token available');\r\n                logout();\r\n            }\r\n        const {data} = await axios.get(`/refresh_token?refresh_token=${LOCALSTORAGE_VALUES.refreshToken}`);\r\n        \r\n\r\n        //update localStorage values\r\n        window.localStorage.setItem(LOCALSTORAGE_KEYS.accessToken, data.access_token);\r\n        window.localStorage.setItem(LOCALSTORAGE_KEYS.timestamp, Date.now());\r\n\r\n        //to reflect our changes\r\n        window.location.reload();\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n\r\nconst getAccessToken = () => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    const queryParams = {\r\n        [LOCALSTORAGE_KEYS.accessToken] : urlParams.get('access_token'),\r\n        [LOCALSTORAGE_KEYS.refreshToken]: urlParams.get('refresh_token'),\r\n        [LOCALSTORAGE_KEYS.expireTime]: urlParams.get('expires_in')\r\n    };\r\n    const hasError = urlParams.get('error');\r\n\r\n    if(hasError || hasTokenExpired() || LOCALSTORAGE_VALUES.accessToken === 'undefined'){\r\n        refreshToken();\r\n    }\r\n\r\n    if(LOCALSTORAGE_VALUES.accessToken && LOCALSTORAGE_VALUES.accessToken !== 'undefined'){\r\n        return LOCALSTORAGE_VALUES.accessToken;\r\n    }\r\n\r\n    if(queryParams[LOCALSTORAGE_KEYS.accessToken]){\r\n        for(const property in queryParams){\r\n            window.localStorage.setItem(property, queryParams[property]);\r\n        }\r\n        window.localStorage.setItem(LOCALSTORAGE_KEYS.timestamp, Date.now());\r\n        return queryParams[LOCALSTORAGE_KEYS.accessToken];\r\n    }\r\n\r\n\r\n\r\n    return false;\r\n}\r\n\r\nexport const accessToken = getAccessToken();\r\naxios.defaults.baseURL = 'https://api.spotify.com/v1';\r\naxios.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\r\naxios.defaults.headers['Content-type'] = 'application/json';\r\n\r\nexport const getCurrentUserProfile = () => axios.get('/me');\r\n\r\nexport const getCurrentUserPlaylists = (limit = 20) => {\r\nreturn axios.get(`/me/playlists?limit=${limit}`);\r\n};\r\n\r\nexport const getTopArtists = (time_range = 'short_term') => {\r\nreturn axios.get(`/me/top/artists?time_range=${time_range}`);\r\n};\r\n\r\nexport const getTopTracks = (time_range = 'short_term') => {\r\nreturn axios.get(`/me/top/tracks?time_range=${time_range}`);\r\n};\r\n\r\n/**\r\n * Get a Playlist\r\n * https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-playlist\r\n * @param {string} playlist_id - The Spotify ID for the playlist.\r\n * @returns {Promise}\r\n */\r\n export const getPlaylistById = playlist_id => {\r\n    return axios.get(`/playlists/${playlist_id}`);\r\n  }\r\n\r\n  /**\r\n * Get Audio Features for Several Tracks\r\n * https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-several-audio-features\r\n * @param {string} ids - A comma-separated list of the Spotify IDs for the tracks\r\n * @returns {Promise}\r\n */\r\nexport const getAudioFeaturesForTracks = ids => {\r\n    return axios.get(`/audio-features?ids=${ids}`);\r\n  };\r\n","import { css } from 'styled-components/macro';\r\n\r\nconst variables = css`\r\n  :root {\r\n    --black: #121212;\r\n    --near-black: #181818;\r\n    --dark-grey: #282828;\r\n    --grey: #535353;\r\n    --light-grey: #b3b3b3;\r\n    --white: #ffffff;\r\n    --green: #1DB954;\r\n\r\n    --font: 'Circular Std', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;\r\n\r\n    --fz-xxs: 12px;\r\n    --fz-xs: 13px;\r\n    --fz-sm: 14px;\r\n    --fz-md: 16px;\r\n    --fz-lg: 18px;\r\n    --fz-xl: 20px;\r\n    --fz-xxl: 24px;\r\n\r\n    --spacing-xxs: 4px;\r\n    --spacing-xs: 8px;\r\n    --spacing-sm: 12px;\r\n    --spacing-md: 16px;\r\n    --spacing-lg: 24px;\r\n    --spacing-xl: 32px;\r\n    --spacing-xxl: 64px;\r\n\r\n    --border-radius-subtle: 4px;\r\n    --border-radius-pill: 30px;\r\n\r\n    --site-max-width: 1300px;\r\n  }\r\n`;\r\n\r\nexport default variables;","import { createGlobalStyle } from 'styled-components/macro';\r\nimport fonts from './fonts';\r\nimport variables from './variables';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${fonts};\r\n  ${variables};\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    min-height: 100%;\r\n    overflow-x: hidden;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    background-color: var(--black);\r\n    color: var(--white);\r\n    font-family: var(--font);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    letter-spacing: -.04em;\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  p {\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  a,\r\n  button {\r\n    transition: all 0.3s ease;\r\n    color: inherit;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-color: var(--dark-grey);\r\n        text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  button {\r\n    border: 0;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    border-radius: var(--border-radius-pill);\r\n    background-color: rgba(0,0,0,.7);\r\n    color: var(--white);\r\n    font-size: var(--fz-sm);\r\n    font-weight: 700;\r\n    padding: var(--spacing-xs) var(--spacing-sm);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: var(--dark-grey);\r\n      outline: 0;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  main {\r\n    position: relative;\r\n    padding: var(--spacing-xxl) 0;\r\n  }\r\n\r\n  .app {\r\n    min-height: 100vh;\r\n  }\r\n\r\n  .sr-only {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    border: 0;\r\n  }\r\n\r\n  .overflow-ellipsis {\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n    display: -webkit-box;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: unset;\r\n    word-break: break-all;\r\n  }\r\n\r\n  .empty-notice {\r\n    color: var(--grey);\r\n    font-size: var(--fz-lg);\r\n    text-align: center;\r\n    padding: var(--spacing-xxl);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import styled from 'styled-components/macro'\r\n\r\nconst StyledHeader = styled.header `\r\n    display: flex;\r\n    align-items: flex-end;\r\n    position: relative;\r\n    background: linear-gradient(transparent, rgba(0,0,0,0.5));\r\n    background-color: var(--grey);\r\n    height: 30vh;\r\n    max-height: 500px;\r\n    min-height: 250px;\r\n\r\n    @media (min-width: 768px){\r\n        min-height: 340px;\r\n    }\r\n\r\n    &:after {\r\n        content: '';\r\n        display: block;\r\n        width: 100%;\r\n        height: 20vh;\r\n        background-color: var(--grey);\r\n        background-image: linear-gradient(rgba(0,0,0,0.6), var(--black));\r\n        position: absolute;\r\n        top: 100%;\r\n        z-index: -1;\r\n    }\r\n\r\n    .header__inner{\r\n        display: flex;\r\n        align-items: flex-end;\r\n        width: 100%;\r\n        max-width: var(--site-max-width);\r\n        margin: 0 auto;\r\n        padding: var(--spacing-lg) var(--spacing-md);\r\n\r\n        @media (min-width: 768px){\r\n            padding: var(--spacing-xl) var(--spacing-xxl);\r\n        }\r\n    }\r\n\r\n    img.header__img{\r\n        width: 20%;\r\n        max-width: 250px;\r\n        min-width: 120px;\r\n        margin-right: var(--spacing-lg);\r\n        box-shadow: 0 4px 60px rgb(0 0 0 / 50%);\r\n        background-color: var(--dark-grey);\r\n        border-radius: ${props => props.type === 'user'? '50%' : '0'};\r\n\r\n        @media (min-width: 768px){\r\n            margin-right: var(--spacing-xl);\r\n        }\r\n    }\r\n\r\n    .header__overline{\r\n        text-transform: uppercase;\r\n        font-size: var(--fz-xxs);\r\n        font-weight: 700;\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n\r\n    h1.header__name{\r\n        font-size: clamp(2.5rem, 10vw, 6rem);\r\n        font-weight: 900;\r\n        line-height: 1;\r\n        margin: 0 0 var(--spacing-xs) 0;\r\n\r\n        @media (min-width: 768px){\r\n            margin: 0 0 var(--spacing-xs) -5px;\r\n        }\r\n    }\r\n\r\n    .header__meta{\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: var(--fz-sm);\r\n        color: var(--light-grey);\r\n        margin: 0;\r\n\r\n        span{\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            &:not(:last-of-type)::after{\r\n                content: '*';\r\n                display: block;\r\n                margin: 0 var(--spacing-xs);\r\n                color: var(--light-grey);\r\n                font-size: 8px;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n`;\r\n\r\nexport default StyledHeader;","import styled from 'styled-components/macro';\r\n\r\nconst StyledSection = styled.section`\r\n  &:first-of-type {\r\n    .section__inner {\r\n      padding-top: 0;\r\n    }\r\n  }\r\n\r\n  .section__inner {\r\n    width: 100%;\r\n    max-width: var(--site-max-width);\r\n    margin: 0 auto;\r\n    position: relative;\r\n    padding: var(--spacing-lg) var(--spacing-md);\r\n\r\n    @media (min-width: 768px) {\r\n      padding: var(--spacing-xl) var(--spacing-xxl);\r\n    }\r\n  }\r\n\r\n  .section__top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: stretch;\r\n    margin-bottom: var(--spacing-xl);\r\n  }\r\n\r\n  .section__heading {\r\n    display: flex;\r\n    margin: 0;\r\n    font-size: var(--fz-xxl);\r\n  }\r\n\r\n  .section__breadcrumb {\r\n    display: flex;\r\n    color: var(--light-grey);\r\n\r\n    //\r\n    &::after {\r\n      content: '/';\r\n      display: block;\r\n      margin: 0 var(--spacing-sm);\r\n    }\r\n\r\n    a {\r\n      &:hover,\r\n      &:focus {\r\n        color: var(--white);\r\n      }\r\n    }\r\n  }\r\n\r\n  .section__see-all {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    text-transform: uppercase;\r\n    color: var(--light-grey);\r\n    font-size: var(--fz-xxs);\r\n    font-weight: 700;\r\n    letter-spacing: 0.1em;\r\n    padding-bottom: 2px;\r\n  }\r\n`;\r\n\r\nexport default StyledSection;","import styled from 'styled-components/macro';\r\n\r\nconst StyledGrid = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n  grid-gap: var(--spacing-sm);\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n    grid-gap: var(--spacing-lg);\r\n  }\r\n\r\n  .grid__item {\r\n    background-color: var(--near-black);\r\n    border-radius: var(--border-radius-subtle);\r\n    transition: background-color 0.3s ease;\r\n    cursor: default;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: var(--dark-grey);\r\n\r\n      img {\r\n        box-shadow: 0 8px 24px rgb(0 0 0 / 50%);\r\n      }\r\n    }\r\n\r\n    a {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .grid__item__inner {\r\n    padding: var(--spacing-sm);\r\n\r\n    @media (min-width: 768px) {\r\n      padding: var(--spacing-md);\r\n    }\r\n  }\r\n\r\n  .grid__item__img {\r\n    position: relative;\r\n    padding-top: 100%;\r\n    margin: 0 auto var(--spacing-lg);\r\n\r\n    img {\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      background-color: var(--dark-grey);\r\n      border-radius: ${props => props.type === 'artist' ? '50%' : '2px'};\r\n    }\r\n  }\r\n\r\n  .grid__item__name {\r\n    margin: 0 0 var(--spacing-xxs);\r\n    font-size: var(--fz-md);\r\n    letter-spacing: normal;\r\n  }\r\n\r\n  .grid__item__label {\r\n    font-size: var(--fz-sm);\r\n    color: var(--light-grey);\r\n  }\r\n`;\r\n\r\nexport default StyledGrid;","import styled from 'styled-components/macro';\r\n\r\nconst StyledTrackList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  .track__item {\r\n    display: grid;\r\n    align-items: center;\r\n    grid-template-columns: 20px 1fr;\r\n    grid-gap: var(--spacing-md);\r\n    padding: var(--spacing-xs);\r\n    color: var(--light-grey);\r\n    font-size: var(--fz-sm);\r\n    border-radius: var(--border-radius-subtle);\r\n    transition: background-color 0.3s ease;\r\n    cursor: default;\r\n\r\n    @media (min-width: 768px) {\r\n      grid-template-columns: 20px 4fr 2fr minmax(60px, 1fr);\r\n      padding: var(--spacing-xs) var(--spacing-sm);\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: var(--dark-grey);\r\n    }\r\n  }\r\n\r\n  .track__item__num {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    font-size: var(--fz-md);\r\n    font-variant-numeric: tabular-nums;\r\n    overflow: visible;\r\n  }\r\n\r\n  .track__item__title-group {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .track__item__img {\r\n    margin-right: var(--spacing-sm);\r\n    width: 40px;\r\n    height: 40px;\r\n    flex-shrink: 0;\r\n    background-color: var(--dark-grey);\r\n  }\r\n\r\n  .track__item__name {\r\n    color: var(--white);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  .track__item__album {\r\n    display: none;\r\n\r\n    @media (min-width: 768px) {\r\n      display: block;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n\r\n  .track__item__duration {\r\n    display: none;\r\n\r\n    @media (min-width: 768px) {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      font-variant-numeric: tabular-nums;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledTrackList;","import styled from 'styled-components/macro';\r\n\r\nconst StyledRangeButtons = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  margin: 0 0 var(--spacing-lg) 0;\r\n  padding: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: var(--spacing-xxl);\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  li {\r\n    margin-right: var(--spacing-xs);\r\n\r\n    @media (min-width: 768px) {\r\n      margin-left: var(--spacing-xs);\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background-color: var(--dark-grey);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: var(--grey);\r\n    }\r\n\r\n    &.active {\r\n      background-color: var(--green);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledRangeButtons;","import styled from 'styled-components/macro';\r\n\r\nconst StyledDropdown = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: var(--spacing-md);\r\n  z-index: 1;\r\n\r\n  @media (min-width: 768px) {\r\n    right: var(--spacing-xxl);\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    top: 15px;\r\n    right: var(--spacing-sm);\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 6px solid var(--white);\r\n  }\r\n\r\n  select {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    background-color: ${props => props.active ? 'rgba(255,255,255,0.1)' : 'transparent'};\r\n    color: white;\r\n    border: 0;\r\n    border-radius: var(--border-radius-subtle);\r\n    font-size: var(--fz-sm);\r\n    font-family: inherit;\r\n    padding: var(--spacing-xs) var(--spacing-xl) var(--spacing-xs) var(--spacing-sm);\r\n  }\r\n\r\n  option {\r\n    background-color: black;\r\n  }\r\n\r\n`;\r\n\r\nexport default StyledDropdown;","import styled from 'styled-components/macro';\r\n\r\nconst StyledLoginContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst StyledLoginButton = styled.a`\r\n  display: inline-block;\r\n  background-color: var(--green);\r\n  color: var(--white);\r\n  border-radius: var(--border-radius-pill);\r\n  font-weight: 700;\r\n  font-size: var(--fz-lg);\r\n  padding: var(--spacing-sm) var(--spacing-xl);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none;\r\n    filter: brightness(1.1);\r\n  }\r\n`;\r\n\r\nconst LOGIN_URI =\r\n  process.env.NODE_ENV !== 'production'\r\n    ? 'http://localhost:8888/login'\r\n    : 'https://lewis-app.herokuapp.com/login';\r\n    //\r\n\r\nconst Login = () => (\r\n  <StyledLoginContainer>\r\n    <StyledLoginButton href={LOGIN_URI}>\r\n      Log in to Spotify\r\n    </StyledLoginButton>\r\n  </StyledLoginContainer>\r\n);\r\n\r\nexport default Login;","/**\r\n * Higher-order function for async/await error handling\r\n * @param {function} fn an async function\r\n * @returns {function}\r\n */\r\n export const catchErrors = fn => {\r\n    return function(...args) {\r\n      return fn(...args).catch((err) => {\r\n        console.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n * Format milliseconds to time duration\r\n * @param {number} ms number of milliseconds\r\n * @returns {string} formatted duration string\r\n * @example 216699 -> '3:36'\r\n */\r\nexport const formatDuration = ms => {\r\n  const minutes = Math.floor(ms / 60000);\r\n  const seconds = Math.floor(((ms % 60000) / 1000));\r\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n}","import { StyledGrid } from '../styles';\r\n\r\nconst ArtistsGrid = ({ artists }) => (\r\n  <>\r\n    {artists && artists.length ? (\r\n      <StyledGrid type=\"artist\">\r\n        {artists.map((artist, i) => (\r\n          <li className=\"grid__item\" key={i}>\r\n            <div className=\"grid__item__inner\">\r\n              {artist.images[0] && (\r\n                <div className=\"grid__item__img\">\r\n                  <img src={artist.images[0].url} alt={artist.name} />\r\n                </div>\r\n              )}\r\n              <h3 className=\"grid__item__name overflow-ellipsis\">{artist.name}</h3>\r\n              <p className=\"grid__item__label\">Artist</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </StyledGrid>\r\n    ) : (\r\n      <p className=\"empty-notice\">No artists available</p>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ArtistsGrid;","import { Link } from 'react-router-dom';\r\nimport { StyledSection } from '../styles';\r\n\r\nconst SectionWrapper = ({ children, title, seeAllLink, breadcrumb }) => (\r\n  <StyledSection>\r\n    <div className=\"section__inner\">\r\n      <div className=\"section__top\">\r\n        <h2 className=\"section__heading\">\r\n          {breadcrumb && (\r\n            <span className=\"section__breadcrumb\">\r\n              <Link to=\"/\">Profile</Link>\r\n            </span>\r\n          )}\r\n          {title && (\r\n            <>\r\n              {seeAllLink ? (\r\n                <Link to={seeAllLink}>{title}</Link>\r\n              ) : (\r\n                <span>{title}</span>\r\n              )}\r\n            </>\r\n          )}\r\n        </h2>\r\n        {seeAllLink && (\r\n          <Link to={seeAllLink} className=\"section__see-all\">See All</Link>\r\n        )}\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  </StyledSection>\r\n);\r\n\r\nexport default SectionWrapper;","import { formatDuration } from '../utils';\r\nimport { StyledTrackList } from '../styles';\r\n\r\nconst TrackList = ({ tracks }) => (\r\n  <>\r\n    {tracks && tracks.length ? (\r\n      <StyledTrackList>\r\n        {tracks.map((track, i) => (\r\n          <li className=\"track__item\" key={i}>\r\n            <div className=\"track__item__num\">{i + 1}</div>\r\n            <div className=\"track__item__title-group\">\r\n              {track.album.images.length && track.album.images[2] && (\r\n                <div className=\"track__item__img\">\r\n                  <img src={track.album.images[2].url} alt={track.name} />\r\n                </div>\r\n              )}\r\n              <div className=\"track__item__name-artist\">\r\n                <div className=\"track__item__name overflow-ellipsis\">\r\n                  {track.name}\r\n                </div>\r\n                <div className=\"track__item__artist overflow-ellipsis\">\r\n                  {track.artists.map((artist, i) => (\r\n                    <span key={i}>\r\n                      {artist.name}{i !== track.artists.length - 1 && ', '}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"track__item__album overflow-ellipsis\">\r\n              {track.album.name}\r\n            </div>\r\n            <div className=\"track__item__duration\">\r\n              {formatDuration(track.duration_ms)}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </StyledTrackList>\r\n    ) : (\r\n      <p className=\"empty-notice\">No tracks available</p>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default TrackList;","import { Link } from 'react-router-dom';\r\nimport { StyledGrid } from '../styles';\r\n\r\nconst PlaylistsGrid = ({ playlists }) => (\r\n  <>\r\n    {playlists && playlists.length ? (\r\n      <StyledGrid>\r\n        {playlists.map((playlist, i) => (\r\n          <li className=\"grid__item\" key={i}>\r\n            <Link className=\"grid__item__inner\" to={`/playlists/${playlist.id}`}>\r\n              {playlist.images.length && playlist.images[0] && (\r\n                <div className=\"grid__item__img\">\r\n                  <img src={playlist.images[0].url} alt={playlist.name} />\r\n                </div>\r\n              )}\r\n              <h3 className=\"grid__item__name overflow-ellipsis\">{playlist.name}</h3>\r\n              <p className=\"grid__item__label\">Playlist</p>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </StyledGrid>\r\n    ) : (\r\n      <p className=\"empty-notice\">No playlists available</p>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default PlaylistsGrid;","import { StyledRangeButtons } from '../styles';\r\n\r\nconst TimeRangeButtons = ({ activeRange, setActiveRange }) => {\r\n  return (\r\n    <StyledRangeButtons>\r\n      <li>\r\n        <button\r\n          className={activeRange === 'short' ? 'active' : ''}\r\n          onClick={() => setActiveRange('short')}>\r\n          This Month\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          className={activeRange === 'medium' ? 'active' : ''}\r\n          onClick={() => setActiveRange('medium')}>\r\n          Last 6 Months\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          className={activeRange === 'long' ? 'active' : ''}\r\n          onClick={() => setActiveRange('long')}>\r\n          All Time\r\n        </button>\r\n      </li>\r\n    </StyledRangeButtons>\r\n  );\r\n};\r\n\r\nexport default TimeRangeButtons;","import styled, { keyframes } from 'styled-components/macro';\r\n\r\nconst dance = keyframes`\r\n  from {\r\n    height: 10px;\r\n  }\r\n  to {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLoader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  min-height: 50vh;\r\n\r\n  .bars {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    overflow: hidden;\r\n    width: 100px;\r\n    min-width: 100px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    z-index: 2;\r\n    position: relative;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst StyledBar = styled.div`\r\n  width: 10px;\r\n  height: 5px;\r\n  margin: 0 2px;\r\n  background-color: var(--dark-grey);\r\n  animation-name: ${dance};\r\n  animation-duration: 400ms;\r\n  animation-play-state: running;\r\n  animation-direction: alternate;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n  animation-delay: ${props => props.delay || '0ms'};\r\n`;\r\n\r\nconst Loader = () => (\r\n  <StyledLoader>\r\n    <div className=\"bars\">\r\n      <StyledBar delay=\"250ms\" />\r\n      <StyledBar delay=\"715ms\" />\r\n      <StyledBar delay=\"475ms\" />\r\n      <StyledBar delay=\"25ms\" />\r\n      <StyledBar delay=\"190ms\" />\r\n    </div>\r\n  </StyledLoader>\r\n);\r\n\r\nexport default Loader;","import { useState, useEffect } from 'react';\r\nimport { catchErrors } from '../utils';\r\nimport { \r\n  getCurrentUserProfile, \r\n  getCurrentUserPlaylists, \r\n  getTopArtists, \r\n  getTopTracks\r\n} from '../spotify';\r\nimport { StyledHeader} from '../styles';\r\nimport { \r\n  ArtistsGrid, \r\n  SectionWrapper, \r\n  TrackList,\r\n  PlaylistsGrid,\r\n  Loader \r\n} from '../components';\r\n\r\nconst Profile = () => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [playlists, setPlaylists] = useState(null);\r\n  const [topArtists, setTopArtists] = useState(null);\r\n  const [topTracks, setTopTracks] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const userProfile = await getCurrentUserProfile();\r\n      setProfile(userProfile.data);\r\n\r\n      const userPlaylists = await getCurrentUserPlaylists();\r\n      setPlaylists(userPlaylists.data);\r\n\r\n      const userTopArtists = await getTopArtists();\r\n      setTopArtists(userTopArtists.data);\r\n\r\n      const userTopTracks = await getTopTracks();\r\n      setTopTracks(userTopTracks.data);\r\n    };\r\n\r\n    catchErrors(fetchData());\r\n  }, []);\r\n\r\n  console.log(topTracks);\r\n\r\n  return (\r\n    <>\r\n      {profile && (\r\n          <StyledHeader type=\"user\">\r\n            <div className=\"header__inner\">\r\n              {profile.images.length && profile.images[0].url && (\r\n                <img className=\"header__img\" src={profile.images[0].url} alt=\"Avatar\"/>\r\n              )}\r\n              <div>\r\n                <div className=\"header__overline\">Profile</div>\r\n                <h1 className=\"header__name\">{profile.display_name}</h1>\r\n                <p className=\"header__meta\">\r\n                  {playlists && (\r\n                    <span>{playlists.total} Playlist{playlists.total !== 1 ? 's' : ''}</span>\r\n                  )}\r\n                  <span>\r\n                    {profile.followers.total} Follower{profile.followers.total !== 1 ? 's' : ''}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </StyledHeader>\r\n      )}\r\n\r\n      <main>\r\n        {topArtists && topTracks && playlists ? (\r\n          <>\r\n            <SectionWrapper title=\"Top artists this month\" seeAllLink=\"/top-artists\">\r\n              <ArtistsGrid artists={topArtists.items.slice(0, 10)} />\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper title=\"Top tracks this month\" seeAllLink=\"/top-tracks\">\r\n              <TrackList tracks={topTracks.items.slice(0, 10)} />\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper title=\"Playlists\" seeAllLink=\"/playlists\">\r\n              <PlaylistsGrid playlists={playlists.items.slice(0, 10)} />\r\n            </SectionWrapper>\r\n        </>) : (<Loader />)\r\n        }\r\n      </main>\r\n\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Profile;","import { useState, useEffect } from 'react';\r\nimport { getTopArtists } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport { ArtistsGrid, SectionWrapper, TimeRangeButtons, Loader } from '../components';\r\n\r\nconst TopArtists = () => {\r\n  const [topArtists, setTopArtists] = useState(null);\r\n  const [activeRange, setActiveRange] = useState('short');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await getTopArtists(`${activeRange}_term`);\r\n      setTopArtists(data);\r\n    };\r\n\r\n    catchErrors(fetchData());\r\n  }, [activeRange]);\r\n\r\n  return (\r\n    <main>\r\n      <SectionWrapper title=\"Top Artists\" breadcrumb={true}>\r\n        <TimeRangeButtons\r\n          activeRange={activeRange}\r\n          setActiveRange={setActiveRange}\r\n        />\r\n\r\n        {topArtists && topArtists.items ? (\r\n          <ArtistsGrid artists={topArtists.items} />\r\n        ) : (<Loader />) }\r\n      </SectionWrapper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TopArtists;","import { useState, useEffect } from 'react';\r\nimport { getTopTracks } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport { SectionWrapper, TrackList, TimeRangeButtons, Loader } from '../components';\r\n\r\nconst TopTracks = () => {\r\n  const [topTracks, setTopTracks] = useState(null);\r\n  const [activeRange, setActiveRange] = useState('short');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await getTopTracks(`${activeRange}_term`);\r\n      setTopTracks(data);\r\n    };\r\n\r\n    catchErrors(fetchData());\r\n  }, [activeRange]);\r\n\r\n  return (\r\n    <main>\r\n      <SectionWrapper title=\"Top Tracks\" breadcrumb={true}>\r\n        <TimeRangeButtons\r\n          activeRange={activeRange}\r\n          setActiveRange={setActiveRange}\r\n        />\r\n\r\n        {topTracks && topTracks.items ? (\r\n          <TrackList tracks={topTracks.items} />\r\n        ) : (<Loader />)}\r\n      </SectionWrapper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TopTracks;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getCurrentUserPlaylists } from '../spotify';\r\nimport { catchErrors } from '../utils';\r\nimport { SectionWrapper, PlaylistsGrid, Loader } from '../components';\r\n\r\nconst Playlists = () => {\r\n  const [playlistsData, setPlaylistsData] = useState(null);\r\n  const [playlists, setPlaylists] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await getCurrentUserPlaylists();\r\n      setPlaylistsData(data);\r\n    };\r\n\r\n    catchErrors(fetchData());\r\n  }, []);\r\n\r\n  // When playlistsData updates, check if there are more playlists to fetch\r\n  // then update the state variable\r\n  useEffect(() => {\r\n    if (!playlistsData) {\r\n      return;\r\n    }\r\n\r\n    // Playlist endpoint only returns 20 playlists at a time, so we need to\r\n    // make sure we get ALL playlists by fetching the next set of playlists\r\n    const fetchMoreData = async () => {\r\n      if (playlistsData.next) {\r\n        const { data } = await axios.get(playlistsData.next);\r\n        setPlaylistsData(data);\r\n      }\r\n    };\r\n\r\n    // Use functional update to update playlists state variable\r\n    // to avoid including playlists as a dependency for this hook\r\n    // and creating an infinite loop\r\n    //playlists == prevState\r\n    //first loop: this happens first, adds first batch of playlists, received from\r\n    //first useEffect hook, to playlist state. Then it uses playlistdata.next url\r\n    //...(playlists ? playlists : [])      same meaning\r\n    setPlaylists(playlists => ([\r\n      ...playlists ? playlists : [],\r\n      ...playlistsData.items\r\n    ]));\r\n\r\n    // Fetch next set of playlists as needed\r\n    catchErrors(fetchMoreData());\r\n\r\n  }, [playlistsData]);\r\n\r\n  return (\r\n    <main>\r\n      <SectionWrapper title=\"Public Playlists\" breadcrumb={true}>\r\n        {playlists ? (\r\n          <PlaylistsGrid playlists={playlists} />\r\n        ) : (<Loader />)}\r\n      </SectionWrapper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Playlists;","import { useState, useEffect, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { catchErrors } from '../utils'\r\nimport { getPlaylistById, getAudioFeaturesForTracks } from '../spotify';\r\nimport { TrackList, SectionWrapper, Loader } from '../components';\r\nimport { StyledHeader, StyledDropdown } from '../styles';\r\n\r\nconst Playlist = () => {\r\n  const { id } = useParams();\r\n  const [playlist, setPlaylist] = useState(null);\r\n  const [tracksData, setTracksData] = useState(null);\r\n  const [tracks, setTracks] = useState(null);\r\n  const [audioFeatures, setAudioFeatures] = useState(null);\r\n  const [sortValue, setSortValue] = useState('');\r\n  const sortOptions = ['danceability', 'tempo', 'energy'];\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await getPlaylistById(id);\r\n      setPlaylist(data);\r\n      setTracksData(data.tracks);\r\n    };\r\n\r\n    catchErrors(fetchData());\r\n  }, [id]);\r\n\r\n  // When tracksData updates, compile arrays of tracks and audioFeatures\r\n  useEffect(() => {\r\n    if (!tracksData) {\r\n      return;\r\n    }\r\n\r\n    // When tracksData updates, check if there are more tracks to fetch\r\n    // then update the state variable\r\n    const fetchMoreData = async () => {\r\n      if (tracksData.next) {\r\n        const { data } = await axios.get(tracksData.next);\r\n        setTracksData(data);\r\n      }\r\n    };\r\n\r\n    setTracks(tracks => ([\r\n      ...tracks ? tracks : [],\r\n      ...tracksData.items\r\n    ]));\r\n\r\n    catchErrors(fetchMoreData());\r\n\r\n    // Also update the audioFeatures state variable using the track IDs\r\n    const fetchAudioFeatures = async () => {\r\n      const ids = tracksData.items.map(({ track }) => track.id).join(',');\r\n      const { data } = await getAudioFeaturesForTracks(ids);\r\n      setAudioFeatures(audioFeatures => ([\r\n        ...audioFeatures ? audioFeatures : [],\r\n        ...data['audio_features']\r\n      ]));\r\n    };\r\n    catchErrors(fetchAudioFeatures());\r\n\r\n\r\n\r\n\r\n  }, [tracksData]);\r\n\r\n  // Map over tracks and add audio_features property to each track\r\n  const tracksWithAudioFeatures = useMemo(() => {\r\n    if (!tracks || !audioFeatures) {\r\n      return null;\r\n    }\r\n\r\n    return tracks.map(({ track }) => {\r\n      const trackToAdd = track;\r\n\r\n      if (!track.audio_features) {\r\n        const audioFeaturesObj = audioFeatures.find(item => {\r\n          if (!item || !track) {\r\n            return null;\r\n          }\r\n          return item.id === track.id;\r\n        });\r\n\r\n        trackToAdd['audio_features'] = audioFeaturesObj;\r\n      }\r\n\r\n      return trackToAdd;\r\n    });\r\n  }, [tracks, audioFeatures]);\r\n\r\n  // Sort tracks by audio feature to be used in template\r\n  const sortedTracks = useMemo(() => {\r\n    if (!tracksWithAudioFeatures) {\r\n      return null;\r\n    }\r\n\r\n    return [...tracksWithAudioFeatures].sort((a, b) => {\r\n      const aFeatures = a['audio_features'];\r\n      const bFeatures = b['audio_features'];\r\n\r\n      if (!aFeatures || !bFeatures) {\r\n        return false;\r\n      }\r\n\r\n      return bFeatures[sortValue] - aFeatures[sortValue];\r\n    });\r\n  }, [sortValue, tracksWithAudioFeatures]);\r\n\r\n  return (\r\n    <>\r\n      {playlist && (\r\n        <>\r\n          <StyledHeader>\r\n            <div className=\"header__inner\">\r\n              {playlist.images.length && playlist.images[0].url && (\r\n                <img className=\"header__img\" src={playlist.images[0].url} alt=\"Playlist Artwork\"/>\r\n              )}\r\n              <div>\r\n                <div className=\"header__overline\">Playlist</div>\r\n                <h1 className=\"header__name\">{playlist.name}</h1>\r\n                <p className=\"header__meta\">\r\n                  {playlist.followers.total ? (\r\n                    <span>{playlist.followers.total} {`follower${playlist.followers.total !== 1 ? 's' : ''}`}</span>\r\n                  ) : null}\r\n                  <span>{playlist.tracks.total} {`song${playlist.tracks.total !== 1 ? 's' : ''}`}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </StyledHeader>\r\n\r\n          <main>\r\n            <SectionWrapper title=\"Playlist\" breadcrumb={true}>\r\n              <StyledDropdown active={!!sortValue}>\r\n                <label className=\"sr-only\" htmlFor=\"order-select\">Sort tracks</label>\r\n                <select\r\n                  name=\"track-order\"\r\n                  id=\"order-select\"\r\n                  onChange={e => setSortValue(e.target.value)}\r\n                  >\r\n                  <option value=\"\">Sort tracks</option>\r\n                  {sortOptions.map((option, i) => (\r\n                    <option value={option} key={i}>\r\n                      {`${option.charAt(0).toUpperCase()}${option.slice(1)}`}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </StyledDropdown>\r\n\r\n              {sortedTracks ? (\r\n                <TrackList tracks={sortedTracks} />\r\n              ) : (<Loader />)}\r\n            </SectionWrapper>\r\n          </main>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Playlist;","import {useEffect, useState} from 'react';\nimport {accessToken, logout} from './spotify';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\nimport { GlobalStyle } from './styles';\nimport styled from 'styled-components/macro';\nimport { \n  Login,\n  Profile,\n  TopArtists, \n  TopTracks,\n  Playlists,\n  Playlist \n} from './pages';\n\nconst StyledLogoutButton = styled.button`\n  position: absolute;\n  top: var(--spacing-sm);\n  right: var(--spacing-md);\n  padding: var(--spacing-xs) var(--spacing-sm);\n  background-color: rgba(0,0,0,.7);\n  color: var(--white);\n  font-size: var(--fz-sm);\n  font-weight: 700;\n  border-radius: var(--border-radius-pill);\n  z-index: 10;\n  @media (min-width: 768px) {\n    right: var(--spacing-lg);\n  }\n`;\n\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nfunction App() {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    setToken(accessToken);\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n\n      <header className=\"App-header\">\n        {!token ? \n        (\n          <Login />\n        ) :\n        (\n          <>\n            <StyledLogoutButton onClick={logout}>Log Out</StyledLogoutButton>\n            <Router>\n              <ScrollToTop />\n\n              <Switch>\n                <Route path=\"/top-artists\">\n                  <TopArtists />\n                </Route>\n                <Route path=\"/top-tracks\">\n                  <TopTracks />\n                </Route>\n                <Route path=\"/playlists/:id\">\n                  <Playlist />\n                </Route>\n                <Route path=\"/playlists\">\n                  <Playlists />\n                </Route>\n                <Route path=\"/\">\n                  <Profile />\n                </Route>\n              </Switch>\n            </Router>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}